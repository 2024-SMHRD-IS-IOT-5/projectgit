{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./login.css\";// CSS 파일 import\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const[credentials,setCredentials]=useState({username:\"\",password:\"\"});const[error,setError]=useState(\"\");const navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setCredentials({...credentials,[name]:value});};const handleLogin=e=>{e.preventDefault();if(credentials.username===\"test\"&&credentials.password===\"1234\"){navigate(\"/profile\");// 로그인 성공 시 프로필 선택 페이지로 이동\n}else{setError(\"아이디 또는 비밀번호가 잘못되었습니다.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:credentials.username,onChange:handleChange,placeholder:\"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:credentials.password,onChange:handleChange,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",required:true})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"login-error\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uB85C\\uADF8\\uC778\"})]})]});};export default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","LoginPage","credentials","setCredentials","username","password","error","setError","navigate","handleChange","e","name","value","target","handleLogin","preventDefault","className","children","onSubmit","type","onChange","placeholder","required"],"sources":["C:/Users/smhrd/Desktop/projectgit/react/src/components/login/LoginPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./login.css\"; // CSS 파일 import\r\n\r\nconst LoginPage = () => {\r\n  const [credentials, setCredentials] = useState({ username: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({ ...credentials, [name]: value });\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (credentials.username === \"test\" && credentials.password === \"1234\") {\r\n      navigate(\"/profile\"); // 로그인 성공 시 프로필 선택 페이지로 이동\r\n    } else {\r\n      setError(\"아이디 또는 비밀번호가 잘못되었습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>로그인</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label>아이디</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={credentials.username}\r\n            onChange={handleChange}\r\n            placeholder=\"아이디를 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>비밀번호</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={credentials.password}\r\n            onChange={handleChange}\r\n            placeholder=\"비밀번호를 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n        {error && <p className=\"login-error\">{error}</p>}\r\n        <button type=\"submit\">로그인</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,aAAa,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,CAAES,QAAQ,CAAE,EAAE,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CAC9E,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAa,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCV,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAE,CAACS,IAAI,EAAGC,KAAM,CAAC,CAAC,CACnD,CAAC,CAED,KAAM,CAAAE,WAAW,CAAIJ,CAAC,EAAK,CACzBA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,GAAIb,WAAW,CAACE,QAAQ,GAAK,MAAM,EAAIF,WAAW,CAACG,QAAQ,GAAK,MAAM,CAAE,CACtEG,QAAQ,CAAC,UAAU,CAAC,CAAE;AACxB,CAAC,IAAM,CACLD,QAAQ,CAAC,uBAAuB,CAAC,CACnC,CACF,CAAC,CAED,mBACEP,KAAA,QAAKgB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BnB,IAAA,OAAAmB,QAAA,CAAI,oBAAG,CAAI,CAAC,cACZjB,KAAA,SAAMkB,QAAQ,CAAEJ,WAAY,CAAAG,QAAA,eAC1BjB,KAAA,QAAAiB,QAAA,eACEnB,IAAA,UAAAmB,QAAA,CAAO,oBAAG,CAAO,CAAC,cAClBnB,IAAA,UACEqB,IAAI,CAAC,MAAM,CACXR,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEV,WAAW,CAACE,QAAS,CAC5BgB,QAAQ,CAAEX,YAAa,CACvBY,WAAW,CAAC,yDAAY,CACxBC,QAAQ,MACT,CAAC,EACC,CAAC,cACNtB,KAAA,QAAAiB,QAAA,eACEnB,IAAA,UAAAmB,QAAA,CAAO,0BAAI,CAAO,CAAC,cACnBnB,IAAA,UACEqB,IAAI,CAAC,UAAU,CACfR,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEV,WAAW,CAACG,QAAS,CAC5Be,QAAQ,CAAEX,YAAa,CACvBY,WAAW,CAAC,+DAAa,CACzBC,QAAQ,MACT,CAAC,EACC,CAAC,CACLhB,KAAK,eAAIR,IAAA,MAAGkB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEX,KAAK,CAAI,CAAC,cAChDR,IAAA,WAAQqB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,oBAAG,CAAQ,CAAC,EAC9B,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
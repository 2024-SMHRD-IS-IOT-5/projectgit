{"ast":null,"code":"import React,{useState}from'react';import\"./watertemp.css\";import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WaterTemp=()=>{const[temp,setTemp]=useState(38);const navigate=useNavigate();const handleTempChange=e=>{setTemp(e.target.value);};const handleSetTemp=e=>{alert(`온도가 ${temp}°C로 설정되었습니다`);};return/*#__PURE__*/_jsxs(\"div\",{className:\"water-temperature-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>navigate(-1),children:\"X\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"\\uBB3C \\uC628\\uB3C4 \\uC124\\uC815\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"label\",children:\"\\uC628\\uB3C4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\"// 필수!! 인풋 타입을 range로 두면 브라우저에서 제공하는 슬라이더 UI\n,min:\"15\"//cold 온도 ->슬라이더 최소값\n,max:\"45\"// hot 온도 -> 슬라이더 최대값 \n,value:temp// 필수!! 슬라이더 기본 세팅 값=>state\n,onChange:handleTempChange// 필수 !! setTemp로 값 변경해주는 함수\n,className:\"slider\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"temperature-value\",children:[\"Value : \",temp,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendations\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-box\",onClick:()=>setTemp(45),children:[\"Hot\",/*#__PURE__*/_jsx(\"span\",{children:\"45\\xB0C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-box\",onClick:()=>setTemp(41),children:[\"Warm\",/*#__PURE__*/_jsx(\"span\",{children:\"41\\xB0C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-box\",onClick:()=>setTemp(38),children:[\"Neutral\",/*#__PURE__*/_jsx(\"span\",{children:\"38\\xB0C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-box\",onClick:()=>setTemp(24),children:[\"Cool\",/*#__PURE__*/_jsx(\"span\",{children:\"24\\xB0C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-box\",onClick:()=>setTemp(15),children:[\"Cold\",/*#__PURE__*/_jsx(\"span\",{children:\"15\\xB0C\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"set-button\",onClick:handleSetTemp,children:\"Settings\"})]})]});};export default WaterTemp;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","WaterTemp","temp","setTemp","navigate","handleTempChange","e","target","value","handleSetTemp","alert","className","children","onClick","type","min","max","onChange"],"sources":["C:/Users/smhrd/Desktop/projectgit/react/src/components/water-temp/WaterTemp.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./watertemp.css\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst WaterTemp = () => {\r\n\r\n    const [temp,setTemp]=useState(38)\r\n\r\n    const navigate=useNavigate()\r\n    \r\n\r\n    const handleTempChange=(e)=>{\r\n        setTemp(e.target.value)\r\n    }\r\n\r\n    const handleSetTemp=(e)=>{\r\n        alert(`온도가 ${temp}°C로 설정되었습니다`) \r\n    }\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <div className='water-temperature-container'>\r\n        {/* 헤더 */}\r\n        <header className='header'>\r\n            <button className='close-button' onClick={()=>navigate(-1)}>X</button>\r\n            <h1>물 온도 설정</h1>\r\n            \r\n        </header>\r\n\r\n        {/* 본문 */}\r\n        <div className='content'>\r\n            <label className='label'>온도</label>\r\n            <input \r\n                type='range' // 필수!! 인풋 타입을 range로 두면 브라우저에서 제공하는 슬라이더 UI\r\n                min=\"15\" //cold 온도 ->슬라이더 최소값\r\n                max=\"45\" // hot 온도 -> 슬라이더 최대값 \r\n                value={temp}  // 필수!! 슬라이더 기본 세팅 값=>state\r\n                onChange={handleTempChange} // 필수 !! setTemp로 값 변경해주는 함수\r\n                className='slider'\r\n            />\r\n            <div className='temperature-value'>Value : {temp}°C</div>\r\n\r\n            <div className='recommendations'>\r\n                <div className='recommendation-box' onClick={()=>setTemp(45)}>\r\n                    Hot\r\n                    <span>45°C</span>\r\n                </div>\r\n                <div className='recommendation-box' onClick={()=>setTemp(41)}>\r\n                    Warm\r\n                    <span>41°C</span>\r\n                </div>\r\n                <div className='recommendation-box' onClick={()=>setTemp(38)}>\r\n                    Neutral\r\n                    <span>38°C</span>\r\n                </div>\r\n                <div className='recommendation-box' onClick={()=>setTemp(24)}>\r\n                    Cool\r\n                    <span>24°C</span>\r\n                </div>\r\n                <div className='recommendation-box' onClick={()=>setTemp(15)}>\r\n                    Cold\r\n                    <span>15°C</span>\r\n                </div>\r\n            </div>\r\n\r\n            <button className='set-button' onClick={handleSetTemp}>Settings</button>\r\n        </div>\r\n\r\n\r\n        {/* 하단 네비게이션 */}\r\n        {/* <div className='footer-toolbar'>\r\n            <div className='toolbar-item' onClick={()=>navigate(\"/tool\")}>\r\n                <img src=\"/emoji/tool-icon.png\" alt=\"Tool Icon\" className='icon'/>\r\n                <span>Tool</span>\r\n            </div>\r\n\r\n            <div className='toolbar-item' onClick={()=>{navigate(\"/main\")}}>\r\n                <img src=\"/emoji/main-icon.png\" alt=\"Main icon\" className='icon'/>\r\n                <span>Main</span>\r\n            </div>\r\n            \r\n            <div className='toolbar-item' onClick={()=>{navigate(\"/setting\")}}>\r\n                <img src=\"/emoji/setting-icon.png\" alt=\"Setting Icon\" className='icon'/>\r\n                <span>Setting</span>\r\n            </div>\r\n        </div> */}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default WaterTemp"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}